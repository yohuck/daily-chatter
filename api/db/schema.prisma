//change the provider to 'mySql' to use mysql.
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                  Int        @id @default(autoincrement())
  username            String?    @unique
  email               String?    @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  roles               String     @default("user")
  posts               Post[]
  responseList        Response[]
  votes               Vote[]
  subscribedTopics    Topic[]
}

// Post is within categories
model Post {
  id          Int        @id @default(autoincrement())
  content     String
  userId      Int
  postingUser User       @relation(fields: [userId], references: [id])
  postTopic   Topic      @relation(fields: [topicId], references: [id])
  responses   Response[]
  postId      Int
  topicId     Int
  Vote        Vote[]
  createdAt   DateTime   @default(now())

  @@unique([topicId, userId])
}

//Topics are categories
model Topic {
  id             Int      @id @default(autoincrement())
  title          String
  description    String
  createdAt      DateTime @default(now())
  subscribedUser User?    @relation(fields: [userId], references: [id])
  userId         Int?
  posts          Post[]
}

//responses are on Posts
model Response {
  id            Int      @id @default(autoincrement())
  postId        Int
  postResponse  Post     @relation(fields: [postId], references: [id])
  responseTitle String
  responseText  String
  votes         Vote[]
  createdAt     DateTime @default(now())
  User          User?    @relation(fields: [userId], references: [id])
  userId        Int?
  reports       Int?
}

//Votes are on Responses
model Vote {
  id             Int      @id @default(autoincrement())
  upvote         Boolean
  downvote       Boolean
  totalUpVotes   Int
  totalDownVotes Int
  superVotes     Int
  totalVotes     Int
  responseVote   Response @relation(fields: [responseId], references: [id])
  userTotal      User     @relation(fields: [userId], references: [id])
  responseId     Int
  postId         Int
  userId         Int
  Post           Post     @relation(fields: [postId], references: [id])

  @@unique([postId, userId, responseId])
}

model Message {
  id             Int      @id @default(autoincrement())
  name           String
  email          String
  messageContent String
  createdAt      DateTime @default(now())
}
