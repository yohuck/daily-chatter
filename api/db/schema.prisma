datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model Usersub {
  id      Int   @id @default(autoincrement())
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  topic   Topic @relation(fields: [topicId], references: [id])
  topicId Int
}

model User {
  id                  Int        @id @default(autoincrement())
  username            String?    @unique
  email               String?    @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  admin               Boolean
  subscriptions       Usersub[]
  responses           Response[]
}

//Topics are categories
model Topic {
  id             Int       @id @default(autoincrement())
  title          String
  subscribedUser Usersub[]
  prompts        Prompt[]
}

// Post is within categories
model Prompt {
  id        Int        @id @default(autoincrement())
  title     String
  body      String
  date      String
  topic     Topic      @relation(fields: [topicId], references: [id])
  topicId   Int
  responses Response[]
}

//responses are on Posts
model Response {
  id        Int      @id @default(autoincrement())
  body      String
  upvotes   Int      @default(0)
  downvotes Int      @default(0)
  reports   Int      @default(0)
  supervote Int      @default(0)
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
  userId    Int
  prompt    Prompt   @relation(fields: [promptId], references: [id])
  promptId  Int
}

model Message {
  id             Int      @id @default(autoincrement())
  name           String
  email          String
  messageContent String
  createdAt      DateTime @default(now())
}
